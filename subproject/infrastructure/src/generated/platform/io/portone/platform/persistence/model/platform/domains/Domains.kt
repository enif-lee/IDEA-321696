/*
 * This file is generated by jOOQ.
 */
package io.portone.platform.persistence.model.platform.domains


import io.portone.platform.persistence.model.platform.Platform

import java.time.OffsetDateTime

import org.jooq.Domain
import org.jooq.Schema
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.LazySchema
import org.jooq.impl.LazySupplier
import org.jooq.impl.SQLDataType



/**
 * The domain <code>platform.amount</code>.
 */
val AMOUNT: Domain<Long> = Internal.createDomain(
      schema()
    , DSL.name("amount")
    , SQLDataType.BIGINT
)

/**
 * The domain <code>platform.audit_time</code>.
 */
val AUDIT_TIME: Domain<OffsetDateTime> = Internal.createDomain(
      schema()
    , DSL.name("audit_time")
    , SQLDataType.TIMESTAMPWITHTIMEZONE
)

/**
 * The domain <code>platform.id</code>.
 */
val ID: Domain<String> = Internal.createDomain(
      schema()
    , DSL.name("id")
    , SQLDataType.VARCHAR(127)
)

/**
 * The domain <code>platform.memo</code>.
 */
val MEMO: Domain<String> = Internal.createDomain(
      schema()
    , DSL.name("memo")
    , SQLDataType.VARCHAR(300)
)

/**
 * The domain <code>platform.rate</code>.
 */
val RATE: Domain<Int> = Internal.createDomain(
      schema()
    , DSL.name("rate")
    , SQLDataType.INTEGER
)

/**
 * The domain <code>platform.string</code>.
 */
val STRING: Domain<String> = Internal.createDomain(
      schema()
    , DSL.name("string")
    , SQLDataType.VARCHAR(255)
)

/**
 * The domain <code>platform.version_ref</code>.
 */
val VERSION_REF: Domain<String> = Internal.createDomain(
      schema()
    , DSL.name("version_ref")
    , SQLDataType.VARCHAR(63).nullable(false)
)

private fun schema(): Schema = LazySchema(DSL.name("platform"), DSL.comment(""), LazySupplier { Platform.PLATFORM })
