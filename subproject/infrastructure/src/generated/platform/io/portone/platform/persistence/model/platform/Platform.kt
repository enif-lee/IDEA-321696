/*
 * This file is generated by jOOQ.
 */
package io.portone.platform.persistence.model.platform


import io.portone.platform.persistence.model.platform.domains.AMOUNT
import io.portone.platform.persistence.model.platform.domains.AUDIT_TIME
import io.portone.platform.persistence.model.platform.domains.ID
import io.portone.platform.persistence.model.platform.domains.MEMO
import io.portone.platform.persistence.model.platform.domains.RATE
import io.portone.platform.persistence.model.platform.domains.STRING
import io.portone.platform.persistence.model.platform.domains.VERSION_REF
import io.portone.platform.persistence.model.platform.tables.Platforms

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Domain
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Platform : SchemaImpl("platform", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>platform</code>
         */
        val PLATFORM: Platform = Platform()
    }

    /**
     * The table <code>platform.platforms</code>.
     */
    val PLATFORMS: Platforms get() = Platforms.PLATFORMS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getDomains(): List<Domain<*>> = listOf(
        AMOUNT,
        AUDIT_TIME,
        ID,
        MEMO,
        RATE,
        STRING,
        VERSION_REF
    )

    override fun getTables(): List<Table<*>> = listOf(
        Platforms.PLATFORMS
    )
}
